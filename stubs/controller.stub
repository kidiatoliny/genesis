<?php

declare(strict_types=1);

namespace App\Http\Controllers;

use App\Actions\{{ modelPlural }}\Create{{ modelName }}Action;
use App\Actions\{{ modelPlural }}\Update{{ modelName }}Action;
use App\Actions\{{ modelPlural }}\Delete{{ modelName }}Action;
use App\Http\Requests\Store{{ modelName }}Request;
use App\Http\Requests\Update{{ modelName }}Request;
use App\Http\Resources\{{ modelName }}Resource;
use App\Models\{{ modelName }};
use Illuminate\Http\JsonResponse;
use Illuminate\Http\Resources\Json\ResourceCollection;

final readonly class {{ modelName }}Controller
{
    public function __construct(
        private Create{{ modelName }}Action $create,
        private Update{{ modelName }}Action $update,
        private Delete{{ modelName }}Action $delete,
    ) {
    }

    public function index(): ResourceCollection
    {
        return {{ modelName }}Resource::collection({{ modelName }}::query()->latest()->paginate());
    }

    public function store(Store{{ modelName }}Request $request): JsonResponse
    {
        ${{ modelVar }} = $this->create->handle($request);

        return response()->json({{ modelName }}Resource::make(${{ modelVar }}), 201);
    }

    public function show({{ modelName }} ${{ modelVar }}): JsonResponse
    {
        return response()->json({{ modelName }}Resource::make(${{ modelVar }}));
    }

    public function update(Update{{ modelName }}Request $request, {{ modelName }} ${{ modelVar }}): JsonResponse
    {
        $updated = $this->update->handle($request, ${{ modelVar }});

        return response()->json({{ modelName }}Resource::make($updated));
    }

    public function destroy({{ modelName }} ${{ modelVar }}): JsonResponse
    {
        $this->delete->handle(${{ modelVar }});

        return response()->noContent();
    }
}